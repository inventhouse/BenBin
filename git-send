#!/bin/bash
# Copyright (c) 2020 Benjamin Holt -- MIT License

set -e  # Stop-on-error

if [ "$1" == "-h" -o "$1" == "--help" ]; then
    cat <<USAGE
usage: git send [-a|--all] -m|--message MESSAGE
                            Commit & push with message; if no files are
                            staged, modified files will be added; -a|--all
                            adds modified files regardless
       git send [-a|--all]  Show git status and prompt for message before
                            sending as above; -a|--all can instead be added
                            at the prompt
       git send -h|--help   Print this message and exit

USAGE
    exit 0
fi

Bold=`tput bold`
Off=`tput sgr0`

AddFlag=""
if [ "$1" == "-a" -o "$1" == "--all" ]; then
    AddFlag="$1"
    shift
fi

if [ -n "$1" ] && ! [ "$1" == "-m" -o "$1" == "--message" ]; then
    echo "Unknown option $1, run 'git send -h|--help' for usage"
    exit 1
fi

Message=""
if [ "$1" == "-m" -o "$1" == "--message" ]; then
    shift
    Message="$*"
fi

if [ -z "$Message" ]; then
    git status -s
    sleep 0.1  # HACK: prompt sometimes comes out out-of-order
    if [ -n "$AddFlag" ] || git diff-index --cached --quiet --ignore-submodules HEAD --; then
        echo "${Bold}Will add changed files${Off}"
    else
        echo "${Bold}Only sending staged changes${Off} (-a MESSAGE to add changed files)"
    fi
    echo "${Bold}Enter a message${Off} (^C or no message to cancel)"
    sleep 0.1
    read -p "${Bold}>${Off} " Message
    Message=`echo "$Message" | sed -e 's/^ *//' -e 's/ *$//'`
    # Handle ex-post-facto -a
    StartsWith=`echo "$Message" | cut -d ' ' -f 1`
    if [ "$StartsWith" == "-a" -o "$StartsWith" == "--all" ]; then
        AddFlag="$StartsWith"
        Message=`echo "$Message" | sed -e "s/^$StartsWith *//"`
    fi

    if [ -z "$Message" ]; then
        echo "${Bold}Canceled${Off}"
        exit 1
    fi
fi

if [ -n "$AddFlag" ] || git diff-index --cached --quiet --ignore-submodules HEAD --; then
    echo "${Bold}Adding changed files...${Off}"
    git add -u  # No staged changes, add unstaged files
fi

sleep 0.1
echo "${Bold}Committing...${Off}"
git commit -m "$Message"

sleep 0.1
echo "${Bold}Pulling...${Off}"
git pull -r --autostash

sleep 0.1
echo "${Bold}Pushing...${Off}"
git push

sleep 0.1
echo "${Bold}Done.${Off}"

###
