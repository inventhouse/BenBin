#!/bin/bash
# Copyright (c) 2020 Benjamin Holt -- MIT License

set -e  # Stop-on-error

if [ "$1" == "-h" -o "$1" == "--help" ]; then
    cat <<USAGE
usage: git send [-a|--add] MESSAGE
                            Commit & push with message; if no files are
                            staged, modified files will be added; -a|--add
                            adds modified files regardless
       git send [-a|--add]  Show status and prompt for message before
                            sending as above
       git send -h|--help   Print this message and exit

USAGE
    exit 0
fi

AddFlag=""
if [ "$1" == "-a" -o "$1" == "--add" ]; then
    AddFlag="$1"
    shift
fi

Message="$*"
if [ -z "$Message" ]; then
    git status -s
    sleep 0.1  # HACK: prompt sometimes comes out out-of-order
    if git diff-index --cached --quiet --ignore-submodules HEAD -- || [ -n "$AddFlag" ]; then
        echo "Sending changed files"
    else
        echo "Only sending staged changes (-a MESSAGE to add changed files)"
    fi
    echo "Enter a message (^C or no message to cancel)"
    sleep 0.1
    read -p "> " Message

    # Handle late -a
    StartsWith=`echo "$Message" | sed -e 's/^ *//' | cut -d ' ' -f 1`
    if [ "$StartsWith" == "-a" -o "$StartsWith" == "--add" ]; then
        AddFlag="$StartsWith"
        Message=`echo "$Message" | sed -e 's/^ *//' -e "s/^$StartsWith//" -e 's/^ *//' -e 's/ *$//'`
    fi

    if [ -z "$Message" ]; then
        echo "Canceled"
        exit 1
    fi
fi

if git diff-index --cached --quiet --ignore-submodules HEAD -- || [ -n "$AddFlag" ]; then
    echo "Adding changed files..."
    git add -u  # No staged changes, add unstaged files
fi

sleep 0.1
echo "Committing..."
git commit -m "$Message"

sleep 0.1
echo "Pulling..."
git pull -r --autostash

sleep 0.1
echo "Pushing..."
git push

sleep 0.1
echo "Done."

###
