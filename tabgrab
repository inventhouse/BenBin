#!/bin/bash
# Copyright (c) 2022 Benjamin Holt -- MIT License

set -e

if [ "$1" == "-h" -o "$1" == "--help" ]; then
    cat <<USAGE
usage: tabgrab [-h|--help] [-c|--copy] [BROWSER]
       Collect tabs from all windows as a markdown list of links with
       the first tab of each window as the parent of the remaining tabs.
       BROWSER defaults to the BROWSER_APP environment variable, otherwise
       the default handler for 'https' is used to guess the system browser.

       -c, --copy    Copies the list to the pasteboard

       -h, --help    Print this message and exit
USAGE
    exit 0
fi

CopyList="false"
if [ "$1" == "-c" -o "$1" == "--copy" ]; then
    CopyList="true"
    shift
fi

Browser="${1:-${BROWSER_APP}}"
if [ -z "$Browser" ]; then
    Handler=`defaults read ~/Library/Preferences/com.apple.LaunchServices/com.apple.launchservices.secure | grep -B1 "LSHandlerURLScheme = https" | head -1 | cut -d '"' -f 2`
    if [ -z "$Handler" -o "$Handler" == "com.apple.safari" ]; then
        Browser="Safari"
    elif [ "$Handler" == "com.google.chrome" ]; then
        Browser="Chrome"
    else
        # Try the last token of the the handler, this would work for Safari and Chrome, but doesn't work with Firefox for some reason :shrug:
        Browser=`echo "$Handler" | tr '.' '\n' | tail -1`
        echo "Guessing $Browser (it may not work)"
    fi
    Bold=`tput bold`
    Off=`tput sgr0`
    echo "${Bold}Grabbing tabs from ${Browser}${Off}" >&2
fi

# Hacked from [Capture all tabs in Safari as URLs to the clipboard â€“ theconsultant.net](https://theconsultant.net/2017/06/capture-all-tabs-in-safari-as-urls-to-the-clipboard/)

osascript <<SCRIPT
tell application "$Browser"
    set tabList to ""
    set windowCount to count (every window)
    repeat with x from 1 to windowCount
        set tabCount to number of tabs in window x
        repeat with y from 1 to tabCount
            if y > 1 then
                set tabList to tabList & "    "
            end if
            set tabName to name of tab y of window x
            set tabURL to URL of tab y of window x as string
            set tabList to tabList & "- [" & tabName & "](" & tabURL & ")" & linefeed as string
        end repeat
        set tabList to tabList & linefeed
    end repeat
    if $CopyList then
        set the clipboard to the tabList
        return "Copied"
    else
        return tabList
    end if
end tell
SCRIPT
