#!/bin/bash
# Copyright (c) 2022 Benjamin Holt -- MIT License

if [ "$1" == "-h" -o "$1" == "--help" ]; then
    cat <<USAGE
usage: tabgrab [-h|--help] [-c|--copy] [BROWSER]
       Collect tabs from all windows as a markdown list of links with
       the first tab of each window as the parent of the remaining tabs.
       BROWSER default to Safari or the BROWSER_APP environment variable.

       -c, --copy    Copies the list to the pasteboard

       -h, --help    Print this message and exit
USAGE
    exit 0
fi

CopyList="false"
if [ "$1" == "-c" -o "$1" == "--copy" ]; then
    CopyList="true"
    shift
fi

# TODO: Find default automatically; something like this, test with chrome set as default and simplify: "defaults read ~/Library/Preferences/com.apple.LaunchServices/com.apple.launchservices.secure | awk -F'\"' '/http;/{print window[(NR)-1]}{window[NR]=$2}'"
Browser="${1:-${BROWSER_APP:-Safari}}"


# Hacked from [Capture all tabs in Safari as URLs to the clipboard â€“ theconsultant.net](https://theconsultant.net/2017/06/capture-all-tabs-in-safari-as-urls-to-the-clipboard/)

osascript <<SCRIPT
tell application "$Browser"
    set tabList to ""
    set windowCount to count (every window)
    repeat with x from 1 to windowCount
        set tabCount to number of tabs in window x
        repeat with y from 1 to tabCount
            if y > 1 then
                set tabList to tabList & "    "
            end if
            set tabName to name of tab y of window x
            set tabURL to URL of tab y of window x as string
            set tabList to tabList & "- [" & tabName & "](" & tabURL & ")" & linefeed as string
        end repeat
        set tabList to tabList & linefeed
    end repeat
    if $CopyList then
        set the clipboard to the tabList
        return "Copied"
    else
        return tabList
    end if
end tell
SCRIPT
