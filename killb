#!/bin/bash

# Copyright (c) 2019 Benjamin Holt -- MIT License

if [ "$1" == "-h" -o "$1" == "--help" ]; then
    cat <<USAGE
usage: killb [B]          Deletes branch B and its associated tracking branch, B
                          defaults to ALLGIT_BRANCH
       killb -h|--help    Print this message and exit
USAGE
    exit 0
fi

Branch="${1:-$ALLGIT_BRANCH}"
if [ -z "$Branch" ]; then
    echo "Must specify a branch directly or with allgit" >&2
    exit 1
fi

if [ "$Branch" == "master" ]; then
    echo "Deleting the master branch is not generally a good idea" >&2
    exit 1
fi

if [ -z `git branch --list "$Branch"` ]; then
    echo "$Branch: not found" >&2
    exit 1
fi

if [ `git rev-parse --abbrev-ref HEAD` == "$Branch" ]; then
    echo "Switching to branch master"
    git checkout master  # FIXME: hardcoded default branch
fi

Upstream=`git rev-parse --abbrev-ref "$Branch@{upstream}" 2> /dev/null | sed -e 's:origin/::'`  # FIXME: hardcoded origin

git branch -d "$Branch"

if [ "$Upstream" ]; then
    git push origin -d "$Upstream" && echo "Deleted upstream $Upstream" # FIXME: hardcoded origin
fi

# Extract branch-pair from git
# git branch -vv | sed -e 's/^[* ] \([^ ][^ ]*\)  *[a-fA-F0-9][a-fA-F0-9]*  *\(\[origin\/\([^] ][^] ]*\)\]\)*.*/\1 \3/' | cut -d ' ' -f 2

# git branch -vv | sed -e 's/^[* ] \([^ ][^ ]*\)  *[a-fA-F0-9][a-fA-F0-9]*  *\[origin\/\([^] ][^] ]*\)\].*/\1 \2/'  # REM: for some reason, I couldn't get backrefs to work in extended re :-/  # FIXME: hardcoded 'origin/'

###
